
// Include theming for Angular Material with `mat.theme()`.
// This Sass mixin will define CSS variables that are used for styling Angular Material
// components according to the Material 3 design spec.
// Learn more about theming and how to use it for your application's
// custom components at https://material.angular.dev/guide/theming
@use '@angular/material' as mat;

html {
  @include mat.theme((
    color: (
      primary: mat.$azure-palette,
      tertiary: mat.$blue-palette,
    ),
    typography: Roboto,
    density: 0,
  ));
}

body {
  // Default the application to a light color theme. This can be changed to
  // `dark` to enable the dark color theme, or to `light dark` to defer to the
  // user's system settings.
  color-scheme: dark;

  // Set a default background, font and text colors for the application using
  // Angular Material's system-level CSS variables. Learn more about these
  // variables at https://material.angular.dev/guide/system-variables
  background-color: var(--mat-sys-surface);
  color: var(--mat-sys-on-surface);
  font: var(--mat-sys-body-medium);

  // Reset the user agent margin.
  margin: 0;
}
/* You can add global styles to this file, and also import other style files */

html, body { height: 100%; }
body { margin: 0; font-family: Roboto, "Helvetica Neue", sans-serif; }

.grid {
  display: grid;
  gap: 1rem;
  
  &.cols-1 { grid-template-columns: 1fr; }
  &.cols-2 { grid-template-columns: repeat(2, 1fr); }
  &.cols-3 { grid-template-columns: repeat(3, 1fr); }
  &.cols-4 { grid-template-columns: repeat(4, 1fr); }
  
  @media (max-width: 599px) {
    &.cols-xs-1 { grid-template-columns: 1fr; }
    &.cols-xs-2 { grid-template-columns: repeat(2, 1fr); }
  }
  
  @media (min-width: 600px) and (max-width: 959px) {
    &.cols-sm-1 { grid-template-columns: 1fr; }
    &.cols-sm-2 { grid-template-columns: repeat(2, 1fr); }
    &.cols-sm-3 { grid-template-columns: repeat(3, 1fr); }
  }
}

// Flex utilities
.flex {
  display: flex;
  
  &.column { flex-direction: column; }
  &.row { flex-direction: row; }
  
  @media (max-width: 599px) {
    &.xs-column { flex-direction: column; }
    &.xs-row { flex-direction: row; }
  }
  
  &.wrap { flex-wrap: wrap; }
  &.center { justify-content: center; align-items: center; }
  &.space-between { justify-content: space-between; }
  &.align-center { align-items: center; }
}

// Responsive spacing
.p {
  &-1 { padding: 0.25rem; }
  &-2 { padding: 0.5rem; }
  &-3 { padding: 1rem; }
  &-4 { padding: 1.5rem; }
  &-5 { padding: 3rem; }
}

.m {
  &-1 { margin: 0.25rem; }
  &-2 { margin: 0.5rem; }
  &-3 { margin: 1rem; }
  &-4 { margin: 1.5rem; }
  &-5 { margin: 3rem; }
}

// Hide/Show utilities
.hide {
  &-xs {
    @media (max-width: 599px) { display: none; }
  }
  &-sm {
    @media (min-width: 600px) and (max-width: 959px) { display: none; }
  }
  &-md {
    @media (min-width: 960px) and (max-width: 1279px) { display: none; }
  }
}

// Container
.container {
  width: 100%;
  margin: 0 auto;
  padding: 1rem;
  box-sizing: border-box;
  
  @media (min-width: 600px) { max-width: 600px; }
  @media (min-width: 960px) { max-width: 960px; }
  @media (min-width: 1280px) { max-width: 1280px; }
}

.success-snackbar {
  background-color: #36b63b !important;
  color: white !important;
}

.error-snackbar {
  background-color: #e27575 !important;
  color: white !important;
}

.mat-mdc-snack-bar-container {
  &.success-snackbar {
    .mdc-snackbar__surface {
      background-color: #36b63b !important;
    }
  }
  
  &.error-snackbar {
    .mdc-snackbar__surface {
      background-color: #e27575 !important;
    }
  }
}